# Generated by Django 5.2.6 on 2025-09-19 09:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorrectReponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'correct_reponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlanningEntretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entretien', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'planning_entretien',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(blank=True, max_length=255, null=True)),
                ('point', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionReponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'question_reponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reponse', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'reponse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScoreEntretien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'score_entretien',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScoreQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
            ],
            options={
                'db_table': 'score_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScoreTotal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'score_total',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'test',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestPoste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'test_poste',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'test_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annonce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=150)),
                ('salaire', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('horaire_de_travail', models.IntegerField(blank=True, null=True)),
                ('lieu_de_poste', models.CharField(blank=True, max_length=255, null=True)),
                ('date_limite_postule', models.DateTimeField(blank=True, null=True)),
                ('document_necessaire', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candidat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=150)),
                ('telephone', models.CharField(blank=True, max_length=30, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('adresse', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Langue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Loisir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StatutCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='StatutEmploye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceCompetence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_obligatoire', models.BooleanField(default=False)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.competence')),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=150)),
                ('resume', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos_cv/')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cvs', to='blog.candidat')),
                ('statut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statut', to='blog.statutcv')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.cv')),
            ],
        ),
        migrations.CreateModel(
            name='CVCompetence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(blank=True, max_length=50, null=True)),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.competence')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competences', to='blog.cv')),
            ],
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salaire', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('candidat', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blog.candidat')),
                ('poste', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.poste')),
            ],
        ),
        migrations.CreateModel(
            name='Embauche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_changement', models.DateTimeField(auto_now_add=True)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('candidat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.candidat')),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.employe')),
            ],
        ),
        migrations.CreateModel(
            name='CVFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField(blank=True, null=True)),
                ('date_fin', models.DateField(blank=True, null=True)),
                ('etablissement', models.CharField(blank=True, max_length=255, null=True)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formations', to='blog.cv')),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.formation')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceFormation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_obligatoire', models.BooleanField(default=False)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.formation')),
            ],
        ),
        migrations.CreateModel(
            name='CVLangue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(blank=True, max_length=50, null=True)),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='langues', to='blog.cv')),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.langue')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceLangue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_obligatoire', models.BooleanField(default=False)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('langue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.langue')),
            ],
        ),
        migrations.CreateModel(
            name='CVLoisir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loisirs', to='blog.cv')),
                ('loisir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.loisir')),
            ],
        ),
        migrations.CreateModel(
            name='AnnonceLoisir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('est_obligatoire', models.BooleanField(default=False)),
                ('annonce', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.annonce')),
                ('loisir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.loisir')),
            ],
        ),
        migrations.AddField(
            model_name='annonce',
            name='poste',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annonces', to='blog.poste'),
        ),
        migrations.CreateModel(
            name='HistoriqueStatutEmploye',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_changement', models.DateTimeField(auto_now_add=True)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.employe')),
                ('statut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.statutemploye')),
            ],
        ),
    ]
